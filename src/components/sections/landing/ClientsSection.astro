---
import { processLiterals } from '@utils/literalProcessor';
import { Image,Picture } from 'astro:assets';
import {getImageFromFolder,getLocalImageSize} from "@utils/utils"


// Define props from Astro
const { trustdata } = processLiterals<Props>(Astro.props);
interface Props {
trustdata:TrustByData
}

// Define TypeScript interface for props
interface TrustByData {
  title: string;
  subTitle?: string;
  data: string[];  // Array of SVG path data strings
}
const images = import.meta.glob<{ default: ImageMetadata }>(`/src/images/trusted/*.{jpeg,jpg,png,gif,webp,svg,avif}`, {
  eager: true
});
// console.log('svgs======',images)

---
<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Title and description -->
  <div class="mx-auto mb-6 w-full space-y-1 text-center sm:w-1/2 lg:w-1/3">
    <h2
      class="text-balance text-2xl font-bold leading-tight text-neutral-800 dark:text-neutral-200 sm:text-3xl"
    >
      {trustdata.title}
    </h2>
    {trustdata.subTitle && (
      <p class="text-pretty leading-tight text-neutral-600 dark:text-neutral-400">
        {trustdata.subTitle}
      </p>
    )}
  </div>
  <div
    class="flex flex-col items-center justify-center gap-y-2 sm:flex-row sm:gap-x-12 sm:gap-y-0 lg:gap-x-24"
  >
    <!-- Loop through the SVG paths in 'data' and render each one -->
    {trustdata.data.map((svgPath, index) => (
            <div class="mx-auto">
        <Picture
          alt={`SVG logo ${index + 1}`}
          src={svgPath
          }
          class="h-auto w-32 py-3 sm:mx-0 lg:w-40 lg:py-5"
          // width={getLocalImageSize(svgPath).width}
          // height={getLocalImageSize(svgPath).height}

          />

        </div>
        ))}


  </div>
</section>
