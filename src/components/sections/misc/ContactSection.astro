---
// Import the necessary components
import AuthBtn from "@components/ui/buttons/AuthBtn.astro";
import ContactIconBlock from "@components/ui/blocks/ContactIconBlock.astro";
import TextInput from "@components/ui/forms/input/TextInput.astro";
import EmailContactInput from "@components/ui/forms/input/EmailContactInput.astro";
import PhoneInput from "@components/ui/forms/input/PhoneInput.astro";
import TextAreaInput from "@components/ui/forms/input/TextAreaInput.astro";
import Icon from "@components/ui/icons/Icon.astro";
export type ContactUsData = {
  pageTitle: string;
  subTitle: string;
  form: {
    formTitle: string;
    formSubTitle: string;
    fields: Array<
      | {
          type: "text";
          id: string;
          label: string;
          name: string;
        }
      | {
          type: "email";
          id: string;
        }
      | {
          type: "phone";
          id: string;
        }
      | {
          type: "textarea";
          id: string;
          label: string;
          name: string;
        }
    >;
    submitButton: {
      type: "button";
      title: string;
    };
  };
  contactMethods: Array<{
    heading: string;
    content: string;
    link?: {
      isVisible: boolean;
      title?: string;
      url?: string;
    };
    isArrowVisible?: boolean;
    address?: {
      isVisible: boolean;
      content?: string;
    };
    icon: string;
  }>;
};

// Props can be passed to this component
const {
  pageTitle,
  subTitle,
  form,
  contactMethods
} = Astro.props.data as ContactUsData;

---

<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <!-- Page Title and Subtitle -->
    <div class="text-center">
      <h1 class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight">
        {pageTitle}
      </h1>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {subTitle}
      </p>
    </div>

    <div class="mt-12 grid items-center gap-6 lg:grid-cols-2 lg:gap-16">
      <!-- Form Section -->
      <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8">
        <h2 class="mb-8 text-xl font-bold text-neutral-700 dark:text-neutral-300">
          {form.formTitle}
        </h2>
        <form>
          <div class="grid gap-4">
            {form.fields.map((field) => {
              if (field.type === 'text') {
                return <TextInput id={field.id} label={field.label} name={field.name} />;
              }
              if (field.type === 'email') {
                return <EmailContactInput id={field.id} />;
              }
              if (field.type === 'phone') {
                return <PhoneInput id={field.id} />;
              }
              if (field.type === 'textarea') {
                return <TextAreaInput id={field.id} label={field.label} name={field.name} />;
              }
            })}
          </div>

          <div class="mt-4 grid">
            <AuthBtn title={form.submitButton.title} />
          </div>

          <div class="mt-3 text-center">
            <p class="text-sm text-neutral-600 dark:text-neutral-400">
              {form.formSubTitle}
            </p>
          </div>
        </form>
      </div>

      <!-- Contact Methods Section -->
      <div class="divide-y divide-neutral-300 dark:divide-neutral-700">
        {contactMethods.map((method) => (
          <ContactIconBlock
            heading={method.heading}
            content={method.content}
            isLinkVisible={method.link?.isVisible || false}
            linkTitle={method.link?.title || ''}
            linkURL={method.link?.url || ''}
            isArrowVisible={method.isArrowVisible || false}
            isAddressVisible={method.address?.isVisible || false}
            addressContent={method.address?.content || ''}
          >
            <Icon name={method.icon} />
          </ContactIconBlock>
        ))}
      </div>
    </div>
  </div>
</section>
