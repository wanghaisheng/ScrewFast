---
import MainLayout from "@/layouts/MainLayout.astro";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import CardSmall from "@components/ui/cards/CardSmall.astro";
import CardWide from "@components/ui/cards/CardWide.astro";
import FeaturesStatsAlt from "@components/sections/features/FeaturesStatsAlt.astro";
import TestimonialsSectionAlt from "@components/sections/testimonials/TestimonialsSectionAlt.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import siteconfig from "@data/site.json";
import type { SupportedLanguage } from "@/utils/base";

interface Props {
  lang: SupportedLanguage;
}

export async function getStaticPaths() {
  const supportedLanguages = Object.keys(siteconfig.supportedLangLabels);
  return supportedLanguages.map(lang => ({
    params: { lang },
    props: { lang }
  }));
}

const { lang } = Astro.props;
const currentLang = lang || "en";

if (!Object.keys(siteconfig.supportedLangLabels).includes(currentLang)) {
  return Astro.redirect('/en/products');
}

const navlinkData = await import(`../../../data_files/${currentLang}/nav.json`)
  .catch(() => ({ nav: [] }));

const pageData = await import(`../../../data_files/${currentLang}/products-index.json`)
  .catch(() => ({
    page: {
      title: "Discover All Products",
      subTitle: "Explore our products"
    },
    features: {
      title: "Why Choose Us",
      subTitle: "Transform your ideas into results",
      benefits: []
    },
    testimonials: {
      title: "Testimonials",
      items: []
    }
  }));

const products: CollectionEntry<"products">[] = (
  await getCollection("products", ({ id }) => {
    return id.startsWith(`${currentLang}/`);
  })
).sort(
  (a, b) => a.data.main.id - b.data.main.id,
);

const pageTitle: string = `Products | ${siteconfig.SITE.title}`;

const structuredData = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "@id": `${siteconfig.SITE.url}/${currentLang}/products`,
  "url": `${siteconfig.SITE.url}/${currentLang}/products`,
  "description": `${siteconfig.SITE.title}`,
  "name": `${siteconfig.SITE.ProductsAlltitle}`,
  "isPartOf": {
    "@type": "WebSite",
    "url": siteconfig.SITE.url,
    "name": siteconfig.SITE.title,
    "description": siteconfig.SITE.description
  },
  "inLanguage": currentLang
};
---

<MainLayout
  lang={lang}
  title={pageTitle}
  navdata={navlinkData}
  supportedLangLabels={siteconfig.supportedLangLabels}
  structuredData={structuredData}>
  <div class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full">
    <div class="mb-4 flex items-center justify-between gap-8 sm:mb-8 md:mb-12">
      <div class="flex items-center gap-12">
        <h1 class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight">
          {pageData.page.title}
        </h1>
        {pageData.page.subTitle && (
          <p class="hidden max-w-screen-sm text-pretty text-neutral-600 dark:text-neutral-400 md:block">
            {pageData.page.subTitle}
          </p>
        )}
      </div>
      <PrimaryCTA
        title="Customer Stories"
        url="#testimonials"
        noArrow={true}
      />
    </div>
    <section class="grid grid-cols-1 gap-4 sm:grid-cols-3 md:gap-6 xl:gap-8">
      {products.map((product, index) => {
        const position = index % 4;
        return position === 0 || position === 3
          ? <CardSmall product={product} />
          : <CardWide product={product} />;
      })}
    </section>
  </div>

  <FeaturesStatsAlt
    title={pageData.features.title}
    subTitle={pageData.features.subTitle}
    benefits={pageData.features.benefits}
  />

  <TestimonialsSectionAlt
    title={pageData.testimonials.title}
    testimonials={pageData.testimonials.items}
  />
</MainLayout>