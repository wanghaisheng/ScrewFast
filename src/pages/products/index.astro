---
import MainLayout from "@/layouts/MainLayout.astro";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import CardWide from "@components/ui/cards/CardWide.astro";
import TestimonialsSectionAlt from "@components/sections/testimonials/TestimonialsSectionAlt.astro";

import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@data/constants";

const product: CollectionEntry<"products">[] = (
  await getCollection("products")
).sort(
  (a: CollectionEntry<"products">, b: CollectionEntry<"products">) =>
    a.data.main.id - b.data.main.id,
);

const title: string = "Products";
const subTitle: string =
  "Explore the durability and precision of ScrewFast tools, designed for both professionals and enthusiasts. Each of our products is crafted with precision and built to last, ensuring you have the right tool for every job.";

const testimonials = [
  {
    content:
      " \"Since switching to ScrewFast's hardware tools, the efficiency on our construction sites has skyrocketed. The durability of the hex bolts and precision of the machine screws are simply unmatched. It's refreshing to work with a company that truly understands the daily demands of the industry.\" ",
    author: "Jason Clark",
    role: "Site Foreman | TopBuild",
    avatarSrc:
      "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=facearea&facepad=2&w=320&h=320&q=80",
    avatarAlt: "Image Description",
  },
  {
    content:
      " \"As an interior designer, I'm always looking for high-quality materials and tools that help bring my visions to life. ScrewFast's mixed screws assortment has been a game-changer for my projects, providing the perfect blend of quality and variety. The outstanding customer support was just the cherry on top!\" ",
    author: "Maria Gonzalez",
    role: "Interior Designer | Creative Spaces",
    avatarSrc:
      "https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&w=1376&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D8&auto=format&fit=facearea&facepad=2&w=320&h=320&q=80",
    avatarAlt: "Image Description",
  },
  {
    content:
      " \"I’ve been a professional carpenter for over 15 years, and I can sincerely say that ScrewFast’s tap bolts and nuts are some of the best I've used. They grip like no other, and I have full confidence in every joint and fixture. Plus, the service is impeccable – they truly care about my project's success.\" ",
    author: "Richard Kim",
    role: "Master Carpenter | WoodWright",
    avatarSrc:
      "https://images.unsplash.com/photo-1474176857210-7287d38d27c6?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D8&auto=format&fit=facearea&facepad=2&w=320&h=320&q=80",
    avatarAlt: "Image Description",
  },
];

const pageTitle: string = `Products | ${SITE.title}`;
const categories = [
  { id: 1, name: 'Category 1' },
  { id: 2, name: 'Category 2' }
];
const subcategories: Record<number, { id: string; name: string }[]> = {
  1: [
    { id: '1a', name: 'Subcategory 1a' },
    { id: '1b', name: 'Subcategory 1b' },
    // Add more subcategories as needed
  ],
  2: [
    { id: '2a', name: 'Subcategory 2a' },
    { id: '2b', name: 'Subcategory 2b' },
    // Add more subcategories as needed
  ],
};
---

<MainLayout
  title={pageTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "WebPage",
    "@id": "https://screwfast.uk/products",
    "url": "https://screwfast.uk/products",
    "name": "Hardware Tools | ScrewFast",
    "description": "Explore the durability and precision of ScrewFast tools, designed for both professionals and enthusiasts.",
    "isPartOf": {
      "@type": "WebSite",
      "url": "https://screwfast.uk",
      "name": "ScrewFast",
      "description": "ScrewFast offers top-tier hardware tools and expert construction services to meet all your project needs."
    },
    "inLanguage": "en-US"
  }}
>
  
  <!-- Add space before category tabs and filter dropdowns -->
  <div class="mb-8">
    <div class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full">
      <div class="mb-4 flex items-center justify-between gap-8 sm:mb-8 md:mb-12">
        <div class="flex items-center gap-12">
          <h1 class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight">
            {title}
          </h1>
          {subTitle && (
            <p class="hidden max-w-screen-sm text-pretty text-neutral-600 dark:text-neutral-400 md:block">
              {subTitle}
            </p>
          )}
        </div>
        <PrimaryCTA title="Customer Stories" url="#testimonials" noArrow={true} />
      </div>

      <!-- Category Tabs and Filter Dropdowns -->
      <div class="flex flex-col-reverse gap-4 lg:flex-row lg:gap-8 mb-4">
        <div class="flex-1 flex items-center gap-4">
          <div class="flex space-x-4">
            {categories.map(category => (
              <button
                key={category.id}
                class={`py-2 px-4 text-sm font-medium ${selectedCategory === category.id ? 'text-blue-600' : 'text-neutral-600 dark:text-neutral-300'}`}
                data-category-id={category.id}
              >
                {category.name}
              </button>
            ))}
          </div>
          <div class="flex flex-grow justify-end space-x-4">
            <select id="filter-type" class="bg-white border border-neutral-300 rounded-lg py-2 px-4 dark:bg-neutral-800 dark:border-neutral-600">
              <option value="">Filter by Type</option>
              <option value="type1">Type 1</option>
              <option value="type2">Type 2</option>
              <option value="type3">Type 3</option>
            </select>

            <select id="filter-material" class="bg-white border border-neutral-300 rounded-lg py-2 px-4 dark:bg-neutral-800 dark:border-neutral-600">
              <option value="">Filter by Material</option>
              <option value="material1">Material 1</option>
              <option value="material2">Material 2</option>
              <option value="material3">Material 3</option>
            </select>

            <select id="filter-size" class="bg-white border border-neutral-300 rounded-lg py-2 px-4 dark:bg-neutral-800 dark:border-neutral-600">
              <option value="">Filter by Size</option>
              <option value="size1">Size 1</option>
              <option value="size2">Size 2</option>
              <option value="size3">Size 3</option>
            </select>
          </div>
        </div>
      </div>

      <!-- Subcategory Button Group with Navigation -->
      <div class="mt-8 flex items-center justify-between">
        <button id="prev-subcategory" class="py-2 px-4 text-sm font-medium text-neutral-600 dark:text-neutral-300">{"<"}</button>
        <div id="subcategory-buttons" class="flex space-x-4">
          <!-- Subcategories will be dynamically inserted here -->
        </div>
        <button id="next-subcategory" class="py-2 px-4 text-sm font-medium text-neutral-600 dark:text-neutral-300">{">"}</button>
      </div>

      <!-- Displaying products -->
      <section id="product-list" class="grid grid-cols-1 gap-4 sm:grid-cols-3 md:gap-6 xl:gap-8 mt-8">
        {product.map((p) => (
          <CardWide
            key={p.data.main.id}
            title={p.data.main.title}
            description={p.data.main.description}
            image={p.data.main.image}
            url={p.data.main.url}
          />
        ))}
      </section>

      <TestimonialsSectionAlt testimonials={testimonials} />
    </div>
  </div>

  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const subcategoryLimit = 7;
      let selectedCategory = 1;
      let currentSubcategoryIndex = 0;

      const updateSubcategories = () => {
        const subcategoryButtons = document.getElementById('subcategory-buttons') as HTMLElement;
        subcategoryButtons.innerHTML = '';

        const relevantSubcategories = (subcategories[selectedCategory] || []).slice(currentSubcategoryIndex, currentSubcategoryIndex + subcategoryLimit);

        relevantSubcategories.forEach((sub) => {
          const button = document.createElement('button');
          button.textContent = sub.name;
          button.className = 'py-2 px-4 text-sm font-medium text-neutral-600 dark:text-neutral-300';
          button.dataset.subcategoryId = sub.id;
          subcategoryButtons.appendChild(button);
        });

        const prevButton = document.getElementById('prev-subcategory') as HTMLElement;
        const nextButton = document.getElementById('next-subcategory') as HTMLElement;

        prevButton.style.display = currentSubcategoryIndex === 0 ? 'none' : 'inline-flex';
        nextButton.style.display = (currentSubcategoryIndex + subcategoryLimit) >= (subcategories[selectedCategory]?.length || 0) ? 'none' : 'inline-flex';
      };

      updateSubcategories();

      document.querySelectorAll('.flex.space-x-4 button[data-category-id]').forEach(button => {
        const btn = button as HTMLButtonElement;
        btn.addEventListener('click', () => {
          selectedCategory = parseInt(btn.dataset.categoryId!, 10);
          currentSubcategoryIndex = 0;
          updateSubcategories();
        });
      });

      const floatingButton = document.getElementById('floating-filter-button') as HTMLElement;
      const filterDropdowns = document.getElementById('filter-dropdowns') as HTMLElement;

      floatingButton.addEventListener('click', () => {
        filterDropdowns.classList.toggle('hidden');
      });
    });
  </script>
</MainLayout>
